name: Run spec tests and linter

defaults:
  run:
    shell: zsh {0}

env:
  TEST_PRESET_TYPE: "minimal"

on:
  push:
    branches:
      - dev
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      test_preset_type:
        default: minimal
        description: Type of test to run, either mainnet or minimal
        type: string
        required: true
  schedule:
    - cron: '0 0 * * *'

jobs:
  lint:
    runs-on: [self-hosted-ghr-custom, size-l-x64, profile-consensusSpecs]
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.12.4'
          cache: ''
      - name: Run linter for pyspec
        run: |
          make lint
          git diff --exit-code

  whitespace:
    runs-on: [self-hosted-ghr-custom, size-l-x64, profile-consensusSpecs]
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check for trailing whitespace
        run: |
          if git grep -n '[[:blank:]]$'; then
            echo "Trailing whitespace found. Please fix it."
            exit 1
          fi

  pyspec-tests:
    runs-on: [self-hosted-ghr-custom, size-xl-x64, profile-consensusSpecs]
    needs: [lint]
    strategy:
      matrix:
        version: ["phase0", "altair", "bellatrix", "capella", "deneb", "electra", "fulu", "eip7441", "eip7732"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Rust for dependencies
        uses: actions-rust-lang/setup-rust-toolchain@9399c7bb15d4c7d47b27263d024f0a4978346ba4 # v1.11.0
      - name: Setup Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.12.4'
          cache: ''
      - name: set preset
        if: github.event.inputs.test_preset_type != ''
        run: |
          echo "spec_test_preset_type=${{ github.event.inputs.test_preset_type || env.TEST_PRESET_TYPE }}" >> $GITHUB_ENV
      - name: set preset
        if: ${{ (github.event_name == 'push' && github.ref_name != 'master') || github.event_name == 'pull_request' }}
        run: |
          echo "spec_test_preset_type=${{ env.TEST_PRESET_TYPE }}" >> $GITHUB_ENV
      - name: set preset
        if: ${{ github.event_name == 'push' && github.ref_name == 'master' }}
        run: |
          echo "spec_test_preset_type=mainnet" >> $GITHUB_ENV
      - name: set preset
        if: github.event.schedule=='0 0 * * *'
        run: |
          echo "spec_test_preset_type=mainnet" >> $GITHUB_ENV
      - name: test-${{ matrix.version }}
        run: make test fork=${{ matrix.version }} preset=${{ env.spec_test_preset_type }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: test-reports-${{ matrix.version }}
          path: tests/core/pyspec/test-reports

  gen-modcheck:
   runs-on: [self-hosted-ghr-custom, size-s-x64, profile-consensusSpecs]
   steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.12.4'
          cache: ''
      - name: Run generators with --modcheck
        run: make gen_all modcheck=true 2>&1 | tee consensustestgen.log
      - name: Check for errors
        run: |
          if grep -q "\[ERROR\]" consensustestgen.log; then
            echo "There is an error in the log"
            exit 1
          fi
