version: 2.1
commands:
  restore_cached_venv:
    description: "Restore a cached venv"
    parameters:
      reqs_checksum:
        type: string
        default: "1234"
      venv_name:
        type: string
        default: "default-name"
    steps:
      - restore_cache:
          keys:
            - << parameters.venv_name >>-venv-<< parameters.reqs_checksum >>
            # fallback to using the latest cache if no exact match is found
            - << parameters.venv_name >>-venv-
  save_cached_venv:
    description: "Save a venv into a cache"
    parameters:
      reqs_checksum:
        type: string
        default: "1234"
      venv_path:
        type: string
        default: "venv"
      venv_name:
        type: string
        default: "default-name"
    steps:
      - save_cache:
          key: << parameters.venv_name >>-venv-<< parameters.reqs_checksum >>
          paths: << parameters.venv_path >>
  restore_pyspec_cached_venv:
    description: "Restore the cache with pyspec keys"
    steps:
      - restore_cached_venv:
          venv_name: v25-pyspec
          reqs_checksum: cache-{{ checksum "setup.py" }}-{{ checksum "requirements_preinstallation.txt" }}
  save_pyspec_cached_venv:
    description: Save a venv into a cache with pyspec keys"
    steps:
      - save_cached_venv:
          venv_name: v25-pyspec
          reqs_checksum: cache-{{ checksum "setup.py" }}-{{ checksum "requirements_preinstallation.txt" }}
          venv_path: ./venv
jobs:
  checkout_specs:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      # Restore git repo at point close to target branch/revision, to speed up checkout
      - restore_cache:
          keys:
            - v3-specs-repo-{{ .Branch }}-{{ .Revision }}
            - v3-specs-repo-{{ .Branch }}-
            - v3-specs-repo-
      - checkout
      - run:
          name: Clean up git repo to reduce cache size
          command: git gc
      # Save the git checkout as a cache, to make cloning next time faster.
      - save_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/specs-repo
  install_pyspec_test:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Install pyspec requirements
          command: make install_test
      - save_pyspec_cached_venv
  test-phase0:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Run py-tests
          command: make citest fork=phase0
      - store_test_results:
          path: tests/core/pyspec/test-reports
  test-altair:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Run py-tests
          command: make citest fork=altair
      - store_test_results:
          path: tests/core/pyspec/test-reports
  test-bellatrix:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Run py-tests
          command: make citest fork=bellatrix
      - store_test_results:
          path: tests/core/pyspec/test-reports
  test-capella:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Run py-tests
          command: make citest fork=capella
      - store_test_results:
          path: tests/core/pyspec/test-reports
  test-deneb:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Run py-tests
          command: make citest fork=deneb
      - store_test_results:
          path: tests/core/pyspec/test-reports
  test-electra:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Run py-tests
          command: make citest fork=electra
      - store_test_results:
          path: tests/core/pyspec/test-reports
  test-whisk:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Run py-tests
          command: make citest fork=whisk
      - store_test_results:
          path: tests/core/pyspec/test-reports
  test-eip7594:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Run py-tests
          command: make citest fork=eip7594
      - store_test_results:
          path: tests/core/pyspec/test-reports
  table_of_contents:
    docker:
      - image: circleci/node:10.16.3
    working_directory: ~/specs-repo
    steps:
      - checkout
      - run:
          name: Check table of contents
          command: sudo npm install -g doctoc@2.2.0 && make check_toc
  codespell:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - checkout
      - run:
          name: Check codespell
          command: pip install 'codespell<3.0.0,>=2.0.0' --user &&  make codespell
  lint:
    docker:
      - image: cimg/python:3.12.4
    working_directory: ~/specs-repo
    steps:
      - restore_cache:
          key: v3-specs-repo-{{ .Branch }}-{{ .Revision }}
      - restore_pyspec_cached_venv
      - run:
          name: Run linter for pyspec
          command: make lint
      - run:
          name: Run linter for test generators
          command: make lint_generators
workflows:
  version: 2.1
  test_spec:
    jobs:
      - checkout_specs
      - install_pyspec_test:
          requires:
            - checkout_specs
      - test-phase0:
          requires:
            - install_pyspec_test
      - test-altair:
          requires:
            - install_pyspec_test
      - test-bellatrix:
          requires:
            - install_pyspec_test
      - test-capella:
          requires:
            - install_pyspec_test
      - test-deneb:
          requires:
            - install_pyspec_test
      - test-electra:
          requires:
            - install_pyspec_test
      - test-whisk:
          requires:
            - install_pyspec_test
      - test-eip7594:
          requires:
            - install_pyspec_test
      - table_of_contents
      - codespell
      - lint:
          requires:
            - install_pyspec_test
